// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Topic {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  content   String
  description String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  collectionIds String[] @db.ObjectId

  @@map("topics")
}

// Note the collectionIds are for MongoDB, where I'm using an array of references instead of a direct relation


model Collection {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?
  topicIds     String[] @db.ObjectId
  publishedUrl String?
  hashnodeUrl  String?
  devToUrl     String?
  createdAt    DateTime @default(now())
  lastEdited   DateTime @updatedAt


  @@map("collections")
}

model PublishedContent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fileName  String
  content   String
  createdAt DateTime @default(now())

  @@map("publishedContent")
}

model MediaItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  filename  String
  url       String
  size      Int
  mimeType  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("mediaItems")
}

model Settings {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  hashnodeToken   String?
  publicationId   String?
  socialSettings  Json?
  lastUpdated     DateTime  @updatedAt
  
  @@map("settings")
}

model SocialMetrics {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  platformId    String
  collectionId  String   @db.ObjectId
  shareCount    Int      @default(0)
  successCount  Int      @default(0)
  failureCount  Int      @default(0)
  lastShared    DateTime @updatedAt
  createdAt     DateTime @default(now())

  @@unique([platformId, collectionId])
  @@map("socialMetrics")
}